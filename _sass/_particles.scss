// Typography
@font-face {
    font-family: 'Noto Sans SC';
    font-style: normal;
    font-weight: 100;
    src: url('../fonts/vendor/noto-sans-sc-v10-chinese-simplified-100.eot'); /* IE9 Compat Modes */
    src: local('Noto Sans SC Thin'), local('NotoSansSC-Thin'),
        url('../fonts/vendor/noto-sans-sc-v10-chinese-simplified-100.eot?#iefix') format('embedded-opentype'), /* IE6-IE8 */
        url('../fonts/vendor/noto-sans-sc-v10-chinese-simplified-100.woff2') format('woff2'), /* Super Modern Browsers */
        url('../fonts/vendor/noto-sans-sc-v10-chinese-simplified-100.woff') format('woff'), /* Modern Browsers */
        url('../fonts/vendor/noto-sans-sc-v10-chinese-simplified-100.ttf') format('truetype'), /* Safari, Android, iOS */
        url('../fonts/vendor/noto-sans-sc-v10-chinese-simplified-100.svg#NotoSansSC') format('svg'); /* Legacy iOS */
}

@font-face {
    font-family: 'Noto Sans SC';
    font-style: normal;
    font-weight: 500;
    src: url('../fonts/vendor/noto-sans-sc-v10-chinese-simplified-500.eot'); /* IE9 Compat Modes */
    src: local('Noto Sans SC Medium'), local('NotoSansSC-Medium'),
        url('../fonts/vendor/noto-sans-sc-v10-chinese-simplified-500.eot?#iefix') format('embedded-opentype'), /* IE6-IE8 */
        url('../fonts/vendor/noto-sans-sc-v10-chinese-simplified-500.woff2') format('woff2'), /* Super Modern Browsers */
        url('../fonts/vendor/noto-sans-sc-v10-chinese-simplified-500.woff') format('woff'), /* Modern Browsers */
        url('../fonts/vendor/noto-sans-sc-v10-chinese-simplified-500.ttf') format('truetype'), /* Safari, Android, iOS */
        url('../fonts/vendor/noto-sans-sc-v10-chinese-simplified-500.svg#NotoSansSC') format('svg'); /* Legacy iOS */
}

@font-face {
    font-family: 'deyibao';
    font-weight: normal;
    font-style: normal;
    src: url('../fonts/deyibao.eot?70433219');
    src: url('../fonts/deyibao.eot?70433219#iefix') format('embedded-opentype'),
        url('../fonts/deyibao.woff2?70433219') format('woff2'),
        url('../fonts/deyibao.woff?70433219') format('woff'),
        url('../fonts/deyibao.ttf?70433219') format('truetype'),
        url('../fonts/deyibao.svg?70433219#deyibao') format('svg');
}

[class*="icon-"] {
    display: inline-block;
}

[class^="icon-"]:before,
[class*=" icon-"]:before {
    font-family: "deyibao";
    font-style: normal;
    font-size: 1.125em;
    font-weight: normal;
    speak: none;

    display: inline-block;
    text-decoration: inherit;
    text-align: center;
    /* opacity: .8; */

    /* For safety - reset parent styles, that can break glyph codes*/
    font-variant: normal;
    text-transform: none;

    /* fix buttons height, for twitter bootstrap */
    line-height: 1em;

    /* Font smoothing. That was taken from TWBS */
    -webkit-font-smoothing: antialiased;
    -moz-osx-font-smoothing: grayscale;

    /* Uncomment for 3D effect */
    /* text-shadow: 1px 1px 1px rgba(127, 127, 127, 0.3); */
}

.icon-logo:before { content: '\e801'; } /* '' */
.icon-menu:before { content: '\e802'; } /* '' */

$font-family           : 'Noto Sans SC', sans-serif;
$font-root-size        : 16px;

// Color
$color-charcoal        : #222224;
$color-charcoal-light  : #4a4a4d;
$color-gray            : #f7f8fa;
$color-white           : #fff;
$color-blue            : #0099ff;
$color-blue-light      : #ccebff;
$color-blue-deep       : #0066cc;

// Space
$space-column          : 2.5vw;
$space-row             : 2rem;

// Screen
$screen-xlarge         : 2560px;
$screen-large          : 1920px;
$screen-medium         : 1280px;
$screen-small          : 640px;
$screen-large-xlarge   : ($screen-large + $screen-xlarge) / 2;
$screen-medium-large   : ($screen-medium + $screen-large) / 2;
$screen-small-medium   : ($screen-small + $screen-medium) / 2;
$screen-max-breakpoint : $screen-medium;
$screen-min-breakpoint : $screen-small;
$screen-breakpoints: (
    max: $screen-max-breakpoint,
    min: $screen-min-breakpoint
);

// Mixin
@mixin media($breakpoint, $feature: if($breakpoint == min, max-width, min-width)) {
    $value: map-get($screen-breakpoints, $breakpoint) + if($feature == min-width, 1, 0);
    @media (#{$feature}: $value) {
        @content;
    }
}

@mixin column($type, $sides: (left, right), $x: 1) {
    $space: $space-column * $x;
    @each $side in $sides {
        #{$type}-#{$side}: $space;
        @include media(max) {
            #{$type}-#{$side}: $screen-max-breakpoint * ($space / 100vw);
        }
        @include media(min) {
            #{$type}-#{$side}: $screen-min-breakpoint * ($space / 100vw);
        }
    }
}

@mixin row($type, $sides: (top, bottom), $x: 1) {
    $space: $space-row * $x;
    @each $side in $sides {
        #{$type}-#{$side}: $space;
    }
}

@mixin width() {
    left: 0;
    right: 0;
    margin-left: auto;
    margin-right: auto;
    @include media(max) {
        width: $screen-max-breakpoint;
    }
}

@mixin height($percentage: 100%) {
    height: 100 * $percentage / 100% * 1vw;
    @include media(max) {
        height: $screen-max-breakpoint * $percentage / 100%;
    }
}
